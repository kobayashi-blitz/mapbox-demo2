// Generated by view binder compiler. Do not edit!
package com.example.mapboxdemo2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mapboxdemo2.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.mapbox.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout circleContainer;

  @NonNull
  public final FrameLayout mapRootContainer;

  @NonNull
  public final MapView mapViewFragment;

  @NonNull
  public final FloatingActionButton myLocationButton;

  @NonNull
  public final ImageButton searchMarkerButton;

  @NonNull
  public final FloatingActionButton showSearchDialogButton;

  @NonNull
  public final FloatingActionButton zoomInButton;

  @NonNull
  public final FloatingActionButton zoomOutButton;

  private FragmentMapBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout circleContainer,
      @NonNull FrameLayout mapRootContainer, @NonNull MapView mapViewFragment,
      @NonNull FloatingActionButton myLocationButton, @NonNull ImageButton searchMarkerButton,
      @NonNull FloatingActionButton showSearchDialogButton,
      @NonNull FloatingActionButton zoomInButton, @NonNull FloatingActionButton zoomOutButton) {
    this.rootView = rootView;
    this.circleContainer = circleContainer;
    this.mapRootContainer = mapRootContainer;
    this.mapViewFragment = mapViewFragment;
    this.myLocationButton = myLocationButton;
    this.searchMarkerButton = searchMarkerButton;
    this.showSearchDialogButton = showSearchDialogButton;
    this.zoomInButton = zoomInButton;
    this.zoomOutButton = zoomOutButton;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.circleContainer;
      FrameLayout circleContainer = ViewBindings.findChildViewById(rootView, id);
      if (circleContainer == null) {
        break missingId;
      }

      FrameLayout mapRootContainer = (FrameLayout) rootView;

      id = R.id.mapViewFragment;
      MapView mapViewFragment = ViewBindings.findChildViewById(rootView, id);
      if (mapViewFragment == null) {
        break missingId;
      }

      id = R.id.myLocationButton;
      FloatingActionButton myLocationButton = ViewBindings.findChildViewById(rootView, id);
      if (myLocationButton == null) {
        break missingId;
      }

      id = R.id.searchMarkerButton;
      ImageButton searchMarkerButton = ViewBindings.findChildViewById(rootView, id);
      if (searchMarkerButton == null) {
        break missingId;
      }

      id = R.id.showSearchDialogButton;
      FloatingActionButton showSearchDialogButton = ViewBindings.findChildViewById(rootView, id);
      if (showSearchDialogButton == null) {
        break missingId;
      }

      id = R.id.zoomInButton;
      FloatingActionButton zoomInButton = ViewBindings.findChildViewById(rootView, id);
      if (zoomInButton == null) {
        break missingId;
      }

      id = R.id.zoomOutButton;
      FloatingActionButton zoomOutButton = ViewBindings.findChildViewById(rootView, id);
      if (zoomOutButton == null) {
        break missingId;
      }

      return new FragmentMapBinding((FrameLayout) rootView, circleContainer, mapRootContainer,
          mapViewFragment, myLocationButton, searchMarkerButton, showSearchDialogButton,
          zoomInButton, zoomOutButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
