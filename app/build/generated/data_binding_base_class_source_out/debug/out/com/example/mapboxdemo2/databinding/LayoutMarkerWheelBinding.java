// Generated by view binder compiler. Do not edit!
package com.example.mapboxdemo2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mapboxdemo2.R;
import com.example.mapboxdemo2.ui.InterceptFrameLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMarkerWheelBinding implements ViewBinding {
  @NonNull
  private final InterceptFrameLayout rootView;

  @NonNull
  public final InterceptFrameLayout circleContainer;

  @NonNull
  public final ImageView icon1;

  @NonNull
  public final ImageView icon2;

  @NonNull
  public final ImageView icon3;

  @NonNull
  public final ImageView icon4;

  @NonNull
  public final ImageView icon5;

  @NonNull
  public final ImageView icon6;

  @NonNull
  public final ImageView icon7;

  @NonNull
  public final ImageView icon8;

  private LayoutMarkerWheelBinding(@NonNull InterceptFrameLayout rootView,
      @NonNull InterceptFrameLayout circleContainer, @NonNull ImageView icon1,
      @NonNull ImageView icon2, @NonNull ImageView icon3, @NonNull ImageView icon4,
      @NonNull ImageView icon5, @NonNull ImageView icon6, @NonNull ImageView icon7,
      @NonNull ImageView icon8) {
    this.rootView = rootView;
    this.circleContainer = circleContainer;
    this.icon1 = icon1;
    this.icon2 = icon2;
    this.icon3 = icon3;
    this.icon4 = icon4;
    this.icon5 = icon5;
    this.icon6 = icon6;
    this.icon7 = icon7;
    this.icon8 = icon8;
  }

  @Override
  @NonNull
  public InterceptFrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMarkerWheelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMarkerWheelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_marker_wheel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMarkerWheelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      InterceptFrameLayout circleContainer = (InterceptFrameLayout) rootView;

      id = R.id.icon1;
      ImageView icon1 = ViewBindings.findChildViewById(rootView, id);
      if (icon1 == null) {
        break missingId;
      }

      id = R.id.icon2;
      ImageView icon2 = ViewBindings.findChildViewById(rootView, id);
      if (icon2 == null) {
        break missingId;
      }

      id = R.id.icon3;
      ImageView icon3 = ViewBindings.findChildViewById(rootView, id);
      if (icon3 == null) {
        break missingId;
      }

      id = R.id.icon4;
      ImageView icon4 = ViewBindings.findChildViewById(rootView, id);
      if (icon4 == null) {
        break missingId;
      }

      id = R.id.icon5;
      ImageView icon5 = ViewBindings.findChildViewById(rootView, id);
      if (icon5 == null) {
        break missingId;
      }

      id = R.id.icon6;
      ImageView icon6 = ViewBindings.findChildViewById(rootView, id);
      if (icon6 == null) {
        break missingId;
      }

      id = R.id.icon7;
      ImageView icon7 = ViewBindings.findChildViewById(rootView, id);
      if (icon7 == null) {
        break missingId;
      }

      id = R.id.icon8;
      ImageView icon8 = ViewBindings.findChildViewById(rootView, id);
      if (icon8 == null) {
        break missingId;
      }

      return new LayoutMarkerWheelBinding((InterceptFrameLayout) rootView, circleContainer, icon1,
          icon2, icon3, icon4, icon5, icon6, icon7, icon8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
